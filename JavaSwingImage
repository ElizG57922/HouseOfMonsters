package hom;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class JavaSwingImage extends JFrame {
	
	private GraphicPanel gp;
	
	public JavaSwingImage (int height, int width, String img){
		setTitle("Image");
		setSize(width, height);
		
		// -- center the frame on the screen
		setLocationRelativeTo(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLayout(new BorderLayout(5, 5));
		gp = new GraphicPanel(img);
		this.add(gp, BorderLayout.CENTER);
		this.setVisible(true);
	}
	
	public class GraphicPanel extends JPanel {
        private BufferedImage image;
		
		public GraphicPanel (String img){
            super();	

            this.setBackground(Color.gray);

            try {
                image = ImageIO.read(new File(getFile(img)));
            }
            catch (IOException ex) {
                System.out.println("Image not found");
                    }
        }
		public String getFile(String img){
            switch(img){
                case "SpinEnd":
                	return "./spin.png";
                case "MistyEnd":
                	return "./mist.png";
                case "MerEnd":
                	return "./mer.png";
                case "PrisEnd":
                	return "./pris.png";
                case "TerEnd":
                	return "./ter.png";
                case "Death":
                	return "./d.png";
                default:
                    return "";
            }
        }
		public Dimension getPreferredSize() 
		{
			return new Dimension(50, 50);
		}

		public void paint(Graphics g)
        {
            super.paintComponent(g);

            Graphics2D g2d = (Graphics2D)g;
            int h = this.getHeight();
            int w = this.getWidth();
            g2d.drawImage(image, 0, 0, w, h, null);
		}
	}
}
